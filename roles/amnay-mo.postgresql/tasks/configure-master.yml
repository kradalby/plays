# file: tasks/configure-master.yml -- postgresql pre-start configuration of master server and startup

- name: "Stage 2: stop old postgresql service"
  service: name="{{ postgresql_service_name }}" state=stopped
  when: postgresql_drop_old_cluster

- name: "Stage 2: remove old postgresql cluster"
  file: path="{{ postgresql_data_dir }}" state=absent
  when: postgresql_drop_old_cluster

- name: "Stage 2: cluster directory replacement with symlink, check destination directory"
  file:
    path: "{{ postgresql_cluster_symlink_src }}"
    state: directory
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0700
  when: postgresql_cluster_symlink_src|length > 0
  
- name: "Stage 2: cluster directory replacement with symlink, create symlink"
  file:
    src: "{{ postgresql_cluster_symlink_src }}"
    dest: "{{ postgresql_data_dir }}"
    state: link
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
  when: postgresql_cluster_symlink_src|length > 0

- name: "Stage 2: check cluster directory"
  stat: path={{ postgresql_data_dir }}
  register: postgresql_data_stat

- name: "Stage 2: initialize new postgresql cluster"
  become: true
  become_user: "{{ postgresql_admin_user }}"
  command: "{{ postgresql_exec_dir }}/initdb -D {{ postgresql_data_dir }}"
  when: postgresql_data_stat.stat.exists == False

- name: "Stage 2: configure pg_hba.conf"
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_dir }}/pg_hba.conf"
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0640

- name: "Stage 2: configure postgresql.conf"
  lineinfile:
    dest: "{{ postgresql_conf_dir }}/postgresql.conf"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.guc }}"
  with_items: "{{ postgresql_conf_default_guc }}"

- name: "Stage 2: create postgresql log directory"
  file:
    path: "{{ postgresql_log_directory }}"
    state: directory
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0755
  when: postgresql_log_directory is defined

- name: "Stage 2: start postgresql service"
  service: name="{{ postgresql_service_name }}" state=restarted enabled=yes
