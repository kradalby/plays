---
- name: PostgreSQL signing key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
    state: present
    filename: postgres

- name: Install PostgreSQL
  apt:
    update_cache: true
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - postgresql-13
      - postgresql-client-13

# - name: Allow access from 192.168.0.0/16
#   lineinfile:
#     path: /etc/postgresql/12/main/pg_hba.conf
#     insertafter: "^# TYPE"
#     line: "host all all 192.168.0.0/16 md5"
#   notify: restart postgres

- name: Listen to all interfaces
  lineinfile:
    path: /etc/postgresql/13/main/postgresql.conf
    insertbefore: "^port"
    line: "listen_addresses = '*'"
  notify: restart postgres

- name: Allow access from 10.60.0.0/16
  lineinfile:
    path: /etc/postgresql/13/main/pg_hba.conf
    insertafter: "^# TYPE"
    line: "host all all 10.60.0.0/16 md5"
  notify: restart postgres

- name: Ensure backup scripts
  template:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: "0755"
  loop:
    - psqldump.sh
    - clean_psqldump.sh
    - check_backups_exists.sh

- name: Ensure backup directory
  file:
    path: "{{ postgres_backup_dir }}"
    owner: postgres
    group: postgres
    recurse: true
    state: directory

- name: Ensure daily database dump backup
  cron:
    name: "Dump all postgres databases"
    user: postgres
    special_time: "daily"
    job: >
      /usr/local/bin/psqldump.sh
    state: present

- name: Ensure daily database dump cleanup
  cron:
    name: "Clean up old database backups"
    special_time: "daily"
    job: >
      /usr/local/bin/clean_psqldump.sh
    state: present

- name: Ensure daily database dump count check
  cron:
    name: "Check if we have a number of backups"
    special_time: "daily"
    job: >
      /usr/local/bin/check_backups_exists.sh
    state: present
