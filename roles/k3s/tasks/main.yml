---
- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Install k3s on master
  shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server {% if skip_traefik %}--no-deploy traefik{% endif %} {% if skip_servicelb %}--no-deploy servicelb{% endif %}" sh -s -
  when: inventory_hostname in groups[group_names[0]][0]


- name: Wait for node-token
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token
    state: present
  when: inventory_hostname in groups[group_names[0]][0]

- name: Register node-token file access mode
  stat:
    path: /var/lib/rancher/k3s/server
  register: p
  when: inventory_hostname in groups[group_names[0]][0]

- name: Change file access node-token
  file:
    path: /var/lib/rancher/k3s/server
    mode: "g+rx,o+rx"
  when: inventory_hostname in groups[group_names[0]][0]

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token
  when: inventory_hostname in groups[group_names[0]][0]

- name: Store Master node-token
  set_fact:
   token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
  when: inventory_hostname in groups[group_names[0]][0]

- name: Restore node-token file access
  file:
    path: /var/lib/rancher/k3s/server
    mode: "{{ p.stat.mode }}"
  when: inventory_hostname in groups[group_names[0]][0]

- name: Install k3s on workers
  shell: curl -sfL https://get.k3s.io | K3S_URL="https://{{ hostvars[groups[group_names[0]][0]].ansible_default_ipv4.address|default(hostvars[groups[group_names[0]][0]].ansible_all_ipv4_addresses[0]) }}:6443" K3S_TOKEN="{{ hostvars[groups[group_names[0]][0]]['token'] }}" sh -
  when: inventory_hostname not in groups[group_names[0]][0]
