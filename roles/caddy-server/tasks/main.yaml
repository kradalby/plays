---
- name: caddy | Ensure dependencies
  apt:
    pkg:
      - jq
    state: present

- name: caddy | Build caddy
  environment:
    GOARCH: "{{ arch }}"
    GOOS: linux
  local_action:
    module: ansible.builtin.command
    chdir: /tmp
    cmd: >
      xcaddy build
      --output /tmp/caddy_linux_{{ arch }}
      --with github.com/abiosoft/caddy-json-schema
      --with github.com/abiosoft/caddy-yaml
      --with github.com/caddy-dns/cloudflare
      --with github.com/mholt/caddy-l4
    creates: "/tmp/caddy_linux_{{ arch }}"

- name: caddy | Ensure caddy
  # get_url:
  #   url: "https://caddyserver.com/api/download?os=linux&arch={{ arch }}&p=github.com%2Fcaddy-dns%2Fcloudflare"
  #   url: "https://caddyserver.com/api/download?os=linux&arch=amd64&p=github.com%2Fabiosoft%2Fcaddy-json-schema&p=github.com%2Fabiosoft%2Fcaddy-yaml&p=github.com%2Fcaddy-dns%2Fcloudflare&p=github.com%2Fmholt%2Fcaddy-l4"
  copy:
    src: "/tmp/caddy_linux_{{ arch }}"
    dest: /usr/bin/caddy
    mode: "0755"
  notify: Generate Caddy config

- name: caddy | Ensure caddy group
  group:
    gid: "{{ accounts.caddy.gid }}"
    name: caddy
    system: true
    state: present

- name: caddy | Ensure caddy user
  user:
    uid: "{{ accounts.caddy.uid }}"
    name: caddy
    group: caddy
    home: /var/lib/caddy
    shell: /usr/sbin/nologin
    comment: Caddy web server
    create_home: true

- name: caddy | Ensure caddy config directory
  file:
    path: "/etc/caddy"
    state: directory
    owner: caddy
    group: caddy

- name: caddy | Ensure Caddyfile.d config directory
  file:
    path: "/etc/caddy/Caddyfile.d"
    state: directory
    owner: caddy
    group: caddy

- name: caddy | Ensure Caddyfile.yaml.d config directory
  file:
    path: "/etc/caddy/Caddyfile.yaml.d"
    state: directory
    owner: caddy
    group: caddy

- name: caddy | Add HTTP(S) Passthroughs
  template:
    src: passthrough.yaml.jinja2
    dest: "/etc/caddy/Caddyfile.yaml.d/passthrough_{{ item.target_ip }}.yaml"
    owner: caddy
    group: caddy
  loop: "{{ caddy_passthroughs }}"
  notify: Generate Caddy config

- name: caddy | Ensure Caddyfile.json.d config directory
  file:
    path: "/etc/caddy/Caddyfile.json.d"
    state: directory
    owner: caddy
    group: caddy

- name: caddy | Install Caddyfile
  template:
    src: Caddyfile
    dest: /etc/caddy/Caddyfile
    owner: caddy
    group: caddy
  notify: Generate Caddy config

- name: caddy | Install Caddyfile l4 config
  template:
    src: l4.yaml
    dest: /etc/caddy/Caddyfile.yaml.d/l4.yaml
    owner: caddy
    group: caddy
  notify: Generate Caddy config

- name: caddy | Ensure config creation script
  template:
    src: build_config.sh
    dest: /etc/caddy/build_config.sh
    owner: caddy
    group: caddy
    mode: "0755"

- name: caddy | Generate configuration
  command:
    cmd: /etc/caddy/build_config.sh
  environment:
    CLOUDFLARE_API_TOKEN: "{{ caddy_cloudflare_api_token }}"
  notify: Generate Caddy config

- name: caddy | Install systemd service description
  template:
    src: caddy.service
    dest: "{{ systemd_service_path }}/caddy.service"

- name: caddy | Enable systemd service
  systemd:
    name: caddy
    daemon_reload: true
    enabled: true
    state: started
