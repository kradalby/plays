---
- name: Ubuntu router | Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Ubuntu router | Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true

- name: Ubuntu router | Ensure WireGuard
  apt:
    update_cache: "{{ apt_update_cache }}"
    pkg: wireguard
    state: present

- name: Ubuntu router | Ensure WireGuard service
  systemd:
    name: wg-quick@wg0
    masked: false
    enabled: true
    state: started

- name: Ubuntu router | Install netplan config
  template:
    src: netplan.yaml.jinja2
    dest: /etc/netplan/51-rpi-router.yaml
    mode: "0644"
  notify: Apply netplan

- name: Ubuntu router | Ensure dnsmasq
  apt:
    update_cache: "{{ apt_update_cache }}"
    pkg: dnsmasq
    state: present
  notify: Restart dnsmasq

- name: Ubuntu router | Install dnsmasq config
  template:
    src: dnsmasq.conf
    dest: /etc/dnsmasq.conf
    mode: "0644"
  notify: Restart dnsmasq

- name: Ubuntu router | Ensure dnsmasq resolv.conf
  template:
    src: resolv.conf
    dest: /etc/resolv.conf
    mode: "0644"
  notify: Restart dnsmasq

- name: Ubuntu router | Ensure dnsmasq logrotate
  template:
    src: dnsmasq.logrotate
    dest: /etc/logrotate.d/dnsmasq
    mode: "0644"

- name: Ubuntu router | Disable systemd-resolved
  systemd:
    name: systemd-resolved
    enabled: false
    state: stopped

#
# Firewall
#

- name: Ubuntu router | Ensure iptables gone
  file:
    path: /etc/iptables
    state: absent

# - name: Ubuntu router | Flush all iptables tables
#   iptables:
#     flush: true
#     table: "{{ item }}"
#   loop:
#     - filter
#     - nat
#     - mangle

- name: Ubuntu router | Ensure nftables
  apt:
    update_cache: "{{ apt_update_cache }}"
    pkg: nftables
    state: present

- name: Ubuntu router | Install nftables config
  template:
    src: nftables.conf
    dest: /etc/nftables.conf
    mode: "0644"
  notify: Restart nftables

- name: Ubuntu router | Validate nftables config
  command:
    cmd: /usr/sbin/nft --check --file /etc/nftables.conf

- name: Ubuntu router | Enable nftables
  systemd:
    name: nftables
    enabled: true
    state: started

# - name: Ubuntu router | Install nftables service
#   template:
#     src: nftables.service
#     dest: /lib/systemd/system/nftables.service
#     mode: "0644"
#   notify: Restart nftables

- name: Ubuntu router | Enable nftables
  systemd:
    daemon_reload: true
    name: nftables
    enabled: true
    state: started

# - name: Ubuntu router | Restart nftables on reboot
#   cron:
#     name: "Restart nftable on reboot"
#     special_time: "reboot"
#     job: >
#       /usr/bin/systemctl restart nftables
#     state: present

# - name: Ubuntu router | Ensure nftables starts after bridge
#   blockinfile:
#     path: /lib/systemd/system/nftables.service
#     # insertafter: "[Unit]"
#     insertbefore: "[Service]"
#     marker: "# --- {mark} Ansible managed block ---"
#     block: |-
#       {% for inf in router_interfaces | filter_lan %}
#       Requires=sys-devices-virtual-net-{{ inf.name }}.device
#       After=sys-devices-virtual-net-{{ inf.name }}.device
#       {% endfor %}
#   notify: Restart nftables

- name: Ubuntu router | Ensure wide-dhcp6
  apt:
    update_cache: "{{ apt_update_cache }}"
    pkg: wide-dhcpv6-client
    state: present
  when: (router_interfaces | filter_wan).netplan.dhcp6

- name: Ubuntu router | Install DHCPv6 config
  template:
    src: wide-dhcp6.conf
    dest: /etc/wide-dhcpv6/dhcp6c.conf
    mode: "0644"
  notify: Restart wide-dhcpv6-client
  when: (router_interfaces | filter_wan).netplan.dhcp6

- name: Ubuntu router | Enable DHCPv6
  systemd:
    name: wide-dhcpv6-client
    enabled: true
    state: started
  when: (router_interfaces | filter_wan).netplan.dhcp6

- name: Ubuntu router | Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: "net.ipv6.conf.{{ (router_interfaces | filter_wan).name }}.forwarding"
    value: "2"
    state: present
    reload: true
  when: (router_interfaces | filter_wan).netplan.dhcp6
