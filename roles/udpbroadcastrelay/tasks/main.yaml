---
# TODO:
# - stop and disable avahi
# - add all tun devices to udprelay service
# - add main device to udprelay
# - ensure netplan is loaded
# - ensure unique ID for udprelay
# - ensure IP pairs are unique

- name: udpbroadcastrelay | Ensure dependencies
  apt:
    pkg:
      - git
      - build-essential
    state: present

- name: udpbroadcastrelay | Ensure git dir
  file:
    path: "{{ ansible_env.HOME }}/git"
    state: directory

- name: udpbroadcastrelay | Clone udpbroadcastrelay
  git:
    repo: https://github.com/marjohn56/udpbroadcastrelay.git
    dest: "{{ ansible_env.HOME }}/git/udpbroadcastrelay"
    # force: true
  register: udpbroadcastrelay

- name: udpbroadcastrelay | make install
  make:
    chdir: "{{ ansible_env.HOME }}/git/udpbroadcastrelay"
    target: "{{ item }}"
  when: udpbroadcastrelay.changed
  loop:
    - clean
    - all
    - install

# - name: udpbroadcastrelay | Ensure tunnels
#   template:
#     src: netplan.yaml.jinja2
#     dest: /etc/netplan/90-udprelay-tunnels.yaml
#   notify: Apply netplan

- name: udpbroadcastrelay | Ensure udpbroadcastrelay service
  template:
    src: udpbroadcastrelay.service
    dest: "/lib/systemd/system/udpbroadcastrelay-{{ item.name }}.service"
    mode: "0644"
  register: systemd_udpbroadcastrelay
  # notify: Restart udpbroadcastrelay
  loop: "{{ udpbroadcastrelay_serivces }}"
  loop_control:
    index_var: item_index

- name: udpbroadcastrelay | Enable receiver service
  systemd:
    name: "udpbroadcastrelay-{{ item.name }}"
    daemon_reload: true
    state: restarted
    enabled: true
  loop: "{{ udpbroadcastrelay_serivces }}"
# - name: udpbroadcastrelay | Ensure no avahi service
#   systemd:
#     name: avahi-daemon
#     state: stopped
#     enabled: false
#   ignore_errors: true
